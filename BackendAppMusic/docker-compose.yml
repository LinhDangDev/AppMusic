services:
  redis:
    image: redis:alpine
    container_name: app_music_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    container_name: app_music_db
    environment:
      POSTGRES_DB: app_music
      POSTGRES_USER: appmusic
      POSTGRES_PASSWORD: appmusic123
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appmusic"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app_music_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: appmusic
      DB_PASSWORD: appmusic123
      DB_NAME: app_music
      DB_TYPE: postgres
      NODE_ENV: development
      ITUNES_API: "https://itunes.apple.com/vn/rss/topsongs/limit=100/json"
      ENABLE_CRON_SYNC: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data:
  redis_data:
